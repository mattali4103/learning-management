import { useParams, useNavigate } from "react-router-dom";
import useStudentProfileData from "../../hooks/useStudentProfileData";
import StudentProfileLayout from "../../components/layouts/StudentProfileLayout";
import Loading from "../../components/Loading";
import PageHeader from "../../components/PageHeader";
import {
  GraduationCap,
  ArrowLeft,
  FileText,
  ClipboardCheck,
  User,
  Target,
  AlertTriangle,
  Clock,
  BookOpen,
} from "lucide-react";

const ThongTinSinhVien = () => {
  const { maSo, maLop } = useParams<{ maSo: string; maLop?: string }>();
  const navigate = useNavigate();

  // Use the common hook for student profile data
  const {
    userInfo,
    tinChiTichLuy,
    diemTrungBinhHocKy,
    progressState,
    loading,
    error,
  } = useStudentProfileData({ maSo });

  // Navigation handlers
  const handleBack = () => {
    if (maLop) {
      const basePath = window.location.pathname.startsWith("/truongkhoa")
        ? "/truongkhoa"
        : "/giangvien";
      navigate(`${basePath}/lop/${maLop}`);
    } else {
      navigate("/giangvien/lop");
    }
  };

  const handleViewKHHT = () => {
    const basePath = window.location.pathname.startsWith("/truongkhoa")
      ? "/truongkhoa"
      : "/giangvien";
    navigate(`${basePath}/lop/${maLop}/student/${maSo}/khht`);
  };

  const handleViewKQHT = () => {
    const basePath = window.location.pathname.startsWith("/truongkhoa")
      ? "/truongkhoa"
      : "/giangvien";
    navigate(`${basePath}/lop/${maLop}/student/${maSo}/kqht`);
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 p-4">
        <div className="bg-white rounded-2xl shadow-lg p-6 border border-gray-100">
          <Loading
            showOverlay={false}
            message="ƒêang t·∫£i th√¥ng tin sinh vi√™n..."
          />
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 p-4">
        <div className="bg-white rounded-2xl shadow-lg p-6 border border-gray-100">
          <div className="text-center">
            <h2 className="text-xl font-bold text-gray-800 mb-4">L·ªói</h2>
            <p className="text-red-600 mb-4">{error}</p>
            <button
              onClick={handleBack}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Quay l·∫°i
            </button>
          </div>
        </div>
      </div>
    );
  }

  // Check if no student data found
  if (!loading && !userInfo) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 p-4">
        <div className="bg-white rounded-2xl shadow-lg p-6 border border-gray-100">
          <div className="text-center">
            <User className="w-16 h-16 text-gray-400 mx-auto mb-4" />
            <h2 className="text-xl font-bold text-gray-800 mb-4">
              Kh√¥ng t√¨m th·∫•y th√¥ng tin sinh vi√™n
            </h2>
            <p className="text-gray-600 mb-4">
              Sinh vi√™n v·ªõi m√£ s·ªë <strong>{maSo}</strong> kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng.
            </p>
            <button
              onClick={handleBack}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Quay l·∫°i
            </button>
          </div>
        </div>
      </div>
    );
  }

  const header = (
    <PageHeader
      title={`H·ªì s∆° sinh vi√™n: ${userInfo?.hoTen}`}
      description={`${userInfo?.maSo} - ${userInfo?.tenNganh}${maLop ? ` - L·ªõp ${maLop}` : ""}`}
      icon={GraduationCap}
      iconColor="from-blue-500 to-indigo-600"
      descriptionIcon={User}
      actions={
        <div className="flex items-center space-x-2">
          <button
            onClick={handleViewKHHT}
            className="flex items-center px-3 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors text-sm font-medium"
          >
            <FileText className="w-4 h-4 mr-2" />
            K·∫ø ho·∫°ch h·ªçc t·∫≠p
          </button>
          <button
            onClick={handleViewKQHT}
            className="flex items-center px-3 py-2 bg-green-100 text-green-700 rounded-lg hover:bg-green-200 transition-colors text-sm font-medium"
          >
            <ClipboardCheck className="w-4 h-4 mr-2" />
            K·∫øt qu·∫£ h·ªçc t·∫≠p
          </button>
        </div>
      }
      backButton={
        <button
          onClick={handleBack}
          className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
        >
          <ArrowLeft className="w-5 h-5 text-gray-600" />
        </button>
      }
    />
  );

  const additionalContent = (
    <div className="space-y-6">
      {/* Quick Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="bg-gradient-to-br from-emerald-50 to-green-50 rounded-xl p-6 border border-emerald-200">
          <div className="flex items-center justify-between mb-4">
            <div className="p-3 bg-emerald-100 rounded-lg">
              <Target className="w-6 h-6 text-emerald-600" />
            </div>
            <span className="text-xs font-medium text-emerald-700 bg-emerald-100 px-2 py-1 rounded-full">
              Ti·∫øn ƒë·ªô
            </span>
          </div>
          <h3 className="text-lg font-bold text-emerald-800 mb-2">
            {progressState.status}
          </h3>
          <p className="text-sm text-emerald-600">
            {progressState.avg ? `${progressState.avg.toFixed(1)} t√≠n ch·ªâ/h·ªçc k·ª≥` : 'Ch∆∞a c√≥ d·ªØ li·ªáu'}
          </p>
          <div className="mt-4 flex items-center justify-between text-xs text-emerald-600">
            <span>T·ªïng: {progressState.totalCredits} TC</span>
            <span>H·ªçc k·ª≥: {progressState.totalSemesters}</span>
          </div>
        </div>

        <div className="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200">
          <div className="flex items-center justify-between mb-4">
            <div className="p-3 bg-blue-100 rounded-lg">
              <GraduationCap className="w-6 h-6 text-blue-600" />
            </div>
            <span className="text-xs font-medium text-blue-700 bg-blue-100 px-2 py-1 rounded-full">
              H·ªçc t·∫≠p
            </span>
          </div>
          <h3 className="text-lg font-bold text-blue-800 mb-2">
            {userInfo?.xepLoaiHocLuc || "Ch∆∞a x√°c ƒë·ªãnh"}
          </h3>
          <p className="text-sm text-blue-600">
            X·∫øp lo·∫°i h·ªçc l·ª±c hi·ªán t·∫°i
          </p>
          <div className="mt-4 text-xs text-blue-600">
            <span>ƒêi·ªÉm TB: {userInfo?.diemTrungBinhTichLuy?.toFixed(2) || "0.00"}</span>
          </div>
        </div>
      </div>

      {/* No Academic Data Message */}
      {(!tinChiTichLuy || tinChiTichLuy.length === 0) && (!diemTrungBinhHocKy || diemTrungBinhHocKy.length === 0) && (
        <div className="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-xl p-6 border-l-4 border-yellow-400">
          <div className="flex items-center">
            <div className="p-3 bg-yellow-100 rounded-lg mr-4">
              <BookOpen className="w-6 h-6 text-yellow-600" />
            </div>
            <div className="flex-1">
              <h3 className="text-lg font-bold text-yellow-800 mb-2 flex items-center">
                üìä Ch∆∞a c√≥ d·ªØ li·ªáu h·ªçc t·∫≠p
              </h3>
              <div className="bg-white/70 p-4 rounded-lg">
                <p className="text-sm text-yellow-700 leading-relaxed">
                  Hi·ªán t·∫°i ch∆∞a c√≥ th√¥ng tin v·ªÅ k·∫øt qu·∫£ h·ªçc t·∫≠p v√† t√≠n ch·ªâ t√≠ch l≈©y c·ªßa sinh vi√™n. 
                  D·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau khi sinh vi√™n ho√†n th√†nh c√°c h·ªçc k·ª≥.
                </p>
              </div>
              <div className="mt-4 flex items-center text-xs text-yellow-600">
                <Clock className="w-4 h-4 mr-1" />
                <span>Vui l√≤ng ki·ªÉm tra l·∫°i sau</span>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Academic Warning Card */}
      {userInfo?.canhBaoHocVu?.lyDo && (
        <div className="bg-gradient-to-r from-red-50 to-pink-50 rounded-xl p-6 border-l-4 border-red-400">
          <div className="flex items-start">
            <div className="p-3 bg-red-100 rounded-lg mr-4">
              <AlertTriangle className="w-6 h-6 text-red-600" />
            </div>
            <div className="flex-1">
              <h3 className="text-lg font-bold text-red-800 mb-2 flex items-center">
                üö® C·∫£nh b√°o h·ªçc v·ª•
              </h3>
              <div className="bg-white/70 p-4 rounded-lg">
                <p className="text-sm text-red-700 leading-relaxed">
                  {userInfo.canhBaoHocVu.lyDo}
                </p>
              </div>
              <div className="mt-4 flex items-center text-xs text-red-600">
                <Clock className="w-4 h-4 mr-1" />
                <span>C·∫ßn ƒë∆∞·ª£c xem x√©t v√† gi·∫£i quy·∫øt</span>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Study Guide Card - Only show if there's academic data */}
      {((tinChiTichLuy && tinChiTichLuy.length > 0) || (diemTrungBinhHocKy && diemTrungBinhHocKy.length > 0)) && (
        <div className="bg-gradient-to-br from-purple-50 to-indigo-50 rounded-xl p-6 border border-purple-200">
          <div className="flex items-center mb-4">
            <div className="p-3 bg-purple-100 rounded-lg mr-4">
              <BookOpen className="w-6 h-6 text-purple-600" />
            </div>
            <div>
              <h3 className="text-lg font-bold text-purple-800">H∆∞·ªõng d·∫´n h·ªçc t·∫≠p</h3>
              <p className="text-sm text-purple-600">M·ªôt s·ªë l·ªùi khuy√™n d√†nh cho b·∫°n</p>
            </div>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            <div className="bg-white/50 p-4 rounded-lg">
              <h4 className="font-semibold text-purple-800 mb-2">üìö H·ªçc t·∫≠p hi·ªáu qu·∫£</h4>
              <p className="text-sm text-purple-700">
                Duy tr√¨ l·ªãch h·ªçc ƒë·ªÅu ƒë·∫∑n v√† tham gia ƒë·∫ßy ƒë·ªß c√°c bu·ªïi h·ªçc
              </p>
            </div>
            <div className="bg-white/50 p-4 rounded-lg">
              <h4 className="font-semibold text-purple-800 mb-2">‚è∞ Qu·∫£n l√Ω th·ªùi gian</h4>
              <p className="text-sm text-purple-700">
                L·∫≠p k·∫ø ho·∫°ch h·ªçc t·∫≠p r√µ r√†ng cho t·ª´ng h·ªçc k·ª≥
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );

  return (
    <StudentProfileLayout
      userInfo={userInfo}
      tinChiTichLuy={tinChiTichLuy}
      diemTrungBinhHocKy={diemTrungBinhHocKy}
      progressState={progressState}
      header={header}
      additionalContent={additionalContent}
      showWelcomeHeader={false}
    />
  );
};

export default ThongTinSinhVien;
